plugins {
    id("org.jetbrains.kotlin.android")
    id 'com.android.application'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'

}
android {
    def compose_version = "1.4.0"
    def kotlin_version = "1.7.21"
    signingConfigs {
        release
    }
    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileSdkVersion 33
    defaultConfig {
        applicationId "fr.nextgear.mesentretiensmoto"
        minSdkVersion 21
        targetSdkVersion 33
        multiDexEnabled true
        versionCode 3
        versionName "1.1"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables {
            useSupportLibrary true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        javaMaxHeapSize "4G"
    }
    namespace 'fr.nextgear.mesentretiensmoto'
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

Properties props = new Properties()
def propFile = file('../signing.properties')
if (propFile.canRead()){
    props.load(new FileInputStream(propFile))

    if (props!=null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {

        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
}else {
    android.buildTypes.release.signingConfig = null
}

def AAVersion = '4.4.0'
def koinVersion = '1.0.2'
def androidArchitectureVersion = "1.1.1"

dependencies {

    implementation project(":data")
    implementation project(":domain")
    implementation project(":presentation")
    implementation 'com.google.firebase:firebase-auth-ktx:22.0.0'

    def compose_version = "1.4.3"

    implementation 'androidx.activity:activity-compose:1.7.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    implementation 'com.google.android.material:material:1.9.0'
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    def lifecycle_version = "2.5.1"
    def arch_version = "2.1.0"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"


    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    // optional - Test helpers for Lifecycle runtime
    testImplementation "androidx.lifecycle:lifecycle-runtime-testing:$lifecycle_version"



    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Plain MVP
    implementation 'au.com.datasymphony:EasyFlow:1.3.1'
    implementation 'com.j256.ormlite:ormlite-android:5.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    //dependencies
    implementation 'com.flaviofaria:kenburnsview:1.0.7'
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    implementation 'com.hannesdorfmann.fragmentargs:annotation:3.0.2'
    implementation 'com.google.android.gms:play-services-auth:20.5.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "com.google.dagger:hilt-android:2.46"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    kapt "com.google.dagger:hilt-compiler:2.46"
    implementation "com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava"


}

kapt {
    correctErrorTypes true
}









